@model DraftEditModel
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="x-ua-compatible" content="IE=Edge" />
    <title>@ViewBag.Title - Hinata</title>
    <link href="http://fonts.googleapis.com/css?family=Questrial" rel="stylesheet" type="text/css" />
    @Styles.Render("~/Content/bootstrap.less")
    @Styles.Render("~/Content/hinata.less")
    @Styles.Render("~/Content/highlightjs.css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
    <div class="navbar navbar-default navbar-static-top">
        <div class="container-fluid">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Hinata", "Index", "Item", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                @Html.Partial("_LogonUser")
            </div>
        </div>
    </div>
<div class="container-fluid body-content">
    <form id="mainForm" role="form" method="POST">
        @Html.AntiForgeryToken()
        @Html.ValidationSummary("", new { @class = "text-danger" })
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.ItemType)
        <div class="form-group row">
            <div class="col-md-12">
                @Html.TextBoxFor(m => m.Title, new { @class = "form-control input-lg", @placeholder = @Html.PlacceHolderFor(m => m.Title) })
                @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-12">
                @Html.TextBoxFor(m => m.TagInlineString, new { @class = "form-control", @placeholder = @Html.PlacceHolderFor(m => m.TagInlineString) })
                @Html.ValidationMessageFor(m => m.TagInlineString, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-6 editor-panel-area">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        @if (Model.IsNewDraft)
                        {
                            <ul class="nav nav-tabs" role="tablist">
                                <li class="active"><a id="aBody" href="#tab-body" role="tab" data-toggle="tab">本文</a></li>
                            </ul>
                        }
                        else
                        {
                            <ul class="nav nav-tabs" role="tablist">
                                <li class="active"><a id="aBody" href="#tab-body" role="tab" data-toggle="tab">本文</a></li>
                                <li><a id ="aDiff" href="#tab-diff" role="tab" data-toggle="tab">差分</a></li>
                            </ul>
                        }
                    </div>
                    <div class="tab-content">
                        <div class="panel-body tab-pane active markdown-editor" id="tab-body" style="max-height: 500px; min-height: 500px; padding: 0;">
                            @Html.TextAreaFor(m => m.Body,
                                                    new
                                                    {
                                                        @id = "item-editor", 
                                                        @class = "form-control item-editor", 
                                                        data_url = Url.Action("AutoSave", "Draft"),
                                                        data_upload_url = Url.Action("Upload", "Image", new { itemid = Model.Id })
                                                    })
                            <div class="text-center">
                                <div class="file">
                                    画像を選択してアップロード
                                    <input type="file" id="update-file" data-url="@Url.Action("Upload", "Image", new {itemid = Model.Id})" />
                                </div>
                            </div>
                        </div>
                        <div class="panel-body tab-pane diff-area" id="tab-diff" style="max-height: 500px; min-height: 500px; overflow-y: auto; overflow-x: hidden; padding: 0;">
                            <div id="diff-view" class="diff-viewer">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-6 hidden-xs" style="padding-left: 0;">
                <div class="panel panel-default">
                    <div class="panel-heading">プレビュー</div>
                    <div class="panel-body" style="max-height: 500px; min-height: 500px; overflow-y: auto; overflow-x: hidden; padding: 0;">
                        <div id="item-view" class="item-viewer" style="padding: 10px;">
                            @Html.Raw(Model.Html)
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @* 質問を期間指定する要件は無い想定 *@
        @if (Model.ItemType == ItemType.Article)
        {
            <div class="form-group row">
                <div class="col-md-6">
                    <div class="input-group">
                        <div class="input-group-addon">
                            公開期間（任意）:
                        </div>
                        @Html.TextBoxFor(m => m.PublishSince, new { @class = "form-control datetime", @placeholder = @Html.PlacceHolderFor(m => m.PublishSince) })
                        <div class="input-group-addon">
                            から
                        </div>
                        @Html.TextBoxFor(m => m.PublishUntil, new { @class = "form-control datetime", @placeholder = @Html.PlacceHolderFor(m => m.PublishUntil) })
                        <div class="input-group-addon">
                            まで公開
                        </div>
                    </div>
                    <div>
                        @Html.ValidationMessageFor(m => m.PublishUntil, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        }
        <div class="form-group row">
            <div class="col-md-9">
                @if (!@Model.IsNewDraft)
                {
                    @Html.TextBoxFor(m => m.Comment, new { @class = "form-control", @placeholder = @Html.PlacceHolderFor(m => m.Comment) })
                    @Html.ValidationMessageFor(m => m.Comment, "", new { @class = "text-danger" })
                }
            </div>
            <div class="col-md-3">
                <div class="pull-right">
                    <div class="checkbox">
                        <label>
                            @Html.CheckBoxFor(m => m.ItemIsPrivate)&nbsp;@Html.DisplayNameFor(m => m.ItemIsPrivate)
                        </label>
                    </div>
                    <button name="Draft" type="button" class="btn btn-default" data-action="@Url.Action("Save")">下書き保存</button>
                    <button name="Submit" type="button" class="btn btn-primary" data-action="@Url.Action("Publish")">投稿する</button>
                </div>
            </div>
        </div>
        @Html.HiddenFor(m => m.PublishedBody)
    </form>
</div>
    <div class="container-fluid body-content">
        <footer>
            <p>&copy; @DateTime.Now.Year - Wabyon</p>
        </footer>
    </div>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/hinata")
    @Scripts.Render("~/bundles/markedjs")
    @Scripts.Render("~/bundles/highlightjs")
    @Scripts.Render("~/bundles/jsdiff")
    @Scripts.Render("~/bundles/datetimepicker")
    @Scripts.Render("~/scripts/view/draft/edit")
</body>
</html>
